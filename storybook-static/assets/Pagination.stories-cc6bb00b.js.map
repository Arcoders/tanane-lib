{"version":3,"file":"Pagination.stories-cc6bb00b.js","sources":["../../packages/ui/src/Pagination/contants.tsx","../../packages/ui/src/Pagination/hooks/usePagination.ts","../../packages/ui/src/Pagination/ItemsPerPage.tsx","../../packages/ui/src/Pagination/PaginationDefaultRender.tsx","../../packages/ui/src/Pagination/Pagination.tsx"],"sourcesContent":["import css from './Styles.module.scss'\n\nexport const DEFALUT_OPTIONS = {\n\tnext: <span className={css.arrow__right} />,\n\tprevious: <span className={css.arrow__left} />,\n\tdisplayText: '',\n\titemsText: 'Items per page.'\n};","import { useState, useEffect } from 'react';\n\nconst DEFAULT_ITEMS_PER_PAGE = 10;\n\ntype PageChange = { currentPage: number, itemsPerPage: number, offset: number }\n\ntype Options = {\n  previous: string | JSX.Element,\n  next: string | JSX.Element\n  displayText: string,\n  itemsText: string\n}\nexport interface PaginationProps {\n  simple?: boolean;\n  options?: Options;\n  totalItems: number;\n  currentPage?: number;\n  visiblePages?: number;\n  defaultItemsPerPage: number;\n  onPageChange: (page: PageChange) => void;\n}\n\nexport const usePagination = ({\n  totalItems,\n  currentPage = 1,\n  visiblePages = 3,\n  onPageChange,\n  defaultItemsPerPage\n}: PaginationProps) => {\n  const [page, setPage] = useState(currentPage);\n  const [itemsPerPage, setItemsPerPage] = useState<number>(DEFAULT_ITEMS_PER_PAGE);\n\n  useEffect(() => {\n    setPage(currentPage);\n  }, [currentPage]);\n\n  useEffect(() => {\n    defaultItemsPerPage && setItemsPerPage(defaultItemsPerPage);\n  }, [defaultItemsPerPage]);\n\n  const handlePageChange = (pageNumber: number) => {\n    setPage(pageNumber);\n    onPageChange({ currentPage: pageNumber, itemsPerPage, offset: pageNumber * itemsPerPage });\n  };\n\n  const handelOnItemsPerPage = (itemsNumber: number) => { \n    setItemsPerPage(itemsNumber);\n    onPageChange({ currentPage: page, itemsPerPage: itemsNumber, offset: (page - 1) * itemsPerPage });\n  }\n\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n\n  const calculatePages = () => {\n    const pages: number[] = [];\n    const halfVisiblePages = Math.floor(visiblePages / 2);\n\n    if (totalPages <= visiblePages) return Array.from({ length: totalPages }, (_, i) => i + 1);\n\n    let startPage = Math.max(1, page - halfVisiblePages);\n    let endPage = Math.min(totalPages, startPage + visiblePages - 1);\n\n    if (startPage === 1) {\n      endPage = visiblePages;\n    } else if (endPage === totalPages) {\n      startPage = totalPages - visiblePages + 1;\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n      pages.push(i);\n    }\n\n    if (startPage > 1) {\n      pages.unshift(-1);\n      pages.unshift(1);\n    }\n\n    if (endPage < totalPages) {\n      pages.push(-2);\n      pages.push(totalPages);\n    }\n\n    return pages;\n  };\n\n  const isNextDisabled = page === 1;\n  const isPreviousDisabled = page === totalPages;\n\n  return {\n    page,\n    itemsPerPage,\n    isNextDisabled,\n    calculatePages,\n    handlePageChange,\n    isPreviousDisabled,\n    handelOnItemsPerPage\n  };\n};\n\nexport default usePagination;","import css from './Styles.module.scss'\n\ntype Options = {\n    previous: string | JSX.Element,\n    next: string | JSX.Element\n    displayText: string,\n    itemsText: string\n  }\n\ninterface ItemsPerPageProps {\n    itemsPerPage: number;\n    options: Options,\n    handelOnItemsPerPage: (itemsPerPage: number) => void;\n}\n\nconst ItemsPerPage: React.FC<ItemsPerPageProps>  = ({ itemsPerPage, handelOnItemsPerPage, options }) => (\n    <div className={css.items}>\n        <span>{options.displayText}</span>\n        <input\n            min=\"1\"\n            type=\"number\"\n            placeholder={itemsPerPage.toString()}\n            onChange={({ target: { value } }) => {\n                value && handelOnItemsPerPage(parseInt(value))\n            }}\n        />\n        <span>{options.itemsText}</span>\n    </div>\n);\n\nexport default ItemsPerPage;","import { Button } from 'tanane-lib-ui';\n\nimport css from './Styles.module.scss'\n\ntype Options = {\n    previous: string | JSX.Element,\n    next: string | JSX.Element\n    displayText: string,\n    itemsText: string\n  }\n\ninterface PaginationDefaultRenderProps {\n    page: number;\n    options: Options;\n    pages: number[] | null;\n    isNextDisabled: boolean;\n    isPreviousDisabled: boolean;\n    handlePageChange: (page: number) => void;\n}\n\nconst PaginationDefaultRender: React.FC<PaginationDefaultRenderProps> = ({\n    page,\n    pages,\n    options,\n    isNextDisabled,\n    handlePageChange,\n    isPreviousDisabled,\n}) => {\n    return (\n        <div className={css.pages}>\n            <Button\n                size=\"large\"\n                variant=\"text\"\n                color=\"secondary\"\n                onClick={() => handlePageChange(page - 1)}\n                disabled={isNextDisabled}\n            >\n                {options.next}\n            </Button>\n\n            {pages?.map(pageNumber => (\n                pageNumber < 0 ? <span key={pageNumber}>...</span> : (\n                    <Button\n                        key={pageNumber}\n                        variant=\"text\"\n                        color={page === pageNumber ? 'primary' : 'secondary'}\n                        onClick={() => handlePageChange(pageNumber)}\n                    >\n                        {pageNumber}\n                    </Button>\n                )\n            ))}\n\n            <Button\n                variant=\"text\"\n                color=\"secondary\"\n                onClick={() => handlePageChange(page + 1)}\n                disabled={isPreviousDisabled}\n            >\n                {options.previous}\n            </Button>\n        </div>\n    );\n};\n\nexport default PaginationDefaultRender;","import { DEFALUT_OPTIONS } from './contants';\nimport { usePagination, type PaginationProps } from './hooks/usePagination';\nimport ItemsPerPage from './ItemsPerPage';\nimport PaginationDefaultRender from './PaginationDefaultRender';\n\nimport css from './Styles.module.scss'\n\nexport const Pagination: React.FC<PaginationProps> = ({\n\tsimple,\n\ttotalItems,\n\tcurrentPage,\n\tonPageChange,\n\tvisiblePages,\n\tdefaultItemsPerPage,\n\toptions = DEFALUT_OPTIONS\n}) => {\n\tconst {\n\t\tpage,\n\t\titemsPerPage,\n\t\tcalculatePages,\n\t\tisNextDisabled,\n\t\thandlePageChange,\n\t\tisPreviousDisabled,\n\t\thandelOnItemsPerPage,\n\t} = usePagination({\n\t\ttotalItems,\n\t\tcurrentPage,\n\t\tvisiblePages,\n\t\tonPageChange,\n\t\tdefaultItemsPerPage\n\t});\n\n\tif (totalItems === 0) return null;\n\n\tconst pages = simple ? null : calculatePages();\n\n\treturn (\n\t\t<div className={css.pagination}>\n\t\t\t{!simple && <ItemsPerPage\n\t\t\t\toptions={options}\n\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\thandelOnItemsPerPage={handelOnItemsPerPage} />}\n\n\t\t\t<PaginationDefaultRender\n\t\t\t\tpage={page}\n\t\t\t\tpages={pages}\n\t\t\t\toptions={options}\n\t\t\t\tisNextDisabled={isNextDisabled}\n\t\t\t\thandlePageChange={handlePageChange}\n\t\t\t\tisPreviousDisabled={isPreviousDisabled} />\n\t\t</div>\n\t);\n};\n\nPagination.displayName = \"Pagination\";\n\n"],"names":["DEFALUT_OPTIONS","jsx","css","DEFAULT_ITEMS_PER_PAGE","usePagination","totalItems","currentPage","visiblePages","onPageChange","defaultItemsPerPage","page","setPage","useState","itemsPerPage","setItemsPerPage","useEffect","handlePageChange","pageNumber","handelOnItemsPerPage","itemsNumber","totalPages","pages","halfVisiblePages","_","i","startPage","endPage","ItemsPerPage","options","jsxs","value","PaginationDefaultRender","isNextDisabled","isPreviousDisabled","Button","Pagination","simple","calculatePages"],"mappings":"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"}