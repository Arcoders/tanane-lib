{"version":3,"file":"Table-ac1001c9.js","sources":["../../packages/ui/src/Table/Cell.tsx","../../packages/ui/src/Table/Table.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\n\ninterface CellProps<T> {\n    item: T;\n    property: keyof T;\n    renders?: Partial<Record<keyof T, (item: T) => JSX.Element>>;\n}\n\nexport default function Cell<T>({ item, property, renders }: CellProps<T>): JSX.Element {\n    const render = renders?.[property];\n\n    if (render) return <td>{render(item)}</td>;\n    \n    return <td>{ item[property] as ReactNode}</td>;\n}","import { ReactNode, useState } from \"react\";\nimport classnames from \"../utils/classnames\";\nimport Cell from './Cell'\nimport css from './Styles.module.scss'\n\nexport interface TableProps<T> {\n  headers: Record<keyof T, string>;\n  items: T[];\n  renders?: Partial<Record<keyof T, (item: T) => JSX.Element>>;\n}\n\nexport function Table<T>({ items, headers, renders }: TableProps<T>): JSX.Element {\n  const [selectedRows, setSelectedRows] = useState<number[]>([]);\n\n  const handleRowSelect = (index: number) => {\n    if (selectedRows.includes(index)) {\n      setSelectedRows(selectedRows.filter((i) => i !== index));\n    } else {\n      setSelectedRows([...selectedRows, index]);\n    }\n  };\n\n  const handleSelectAll = () => {\n    if (selectedRows.length === items.length) {\n      setSelectedRows([]);\n    } else {\n      const allIndices = Array.from({ length: items.length }, (_, i) => i);\n      setSelectedRows(allIndices);\n    }\n  };\n\n  return (\n    <table className={css.table}>\n      <thead>\n        <tr>\n          <th>\n            <input\n              type=\"checkbox\"\n              checked={selectedRows.length === items.length}\n              onChange={handleSelectAll}\n            />\n          </th>\n          {Object.values(headers).map((headerValue, index) => (\n            <th key={index}>{headerValue as ReactNode}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>{items.map((item, rowIndex) => (\n        <tr key={rowIndex} className={classnames({ [css.selected]: selectedRows.includes(rowIndex) })}>\n          <td>\n            <input\n              type=\"checkbox\"\n              checked={selectedRows.includes(rowIndex)}\n              onChange={() => handleRowSelect(rowIndex)}\n              data-testid={`checkbox-${rowIndex}`}\n            />\n          </td>\n          {Object.keys(headers).map((property, cellIndex) => (\n            <Cell key={`${rowIndex}-${cellIndex}`} item={item} property={property as keyof T} renders={renders} />\n          ))}\n        </tr>\n      ))}</tbody>\n    </table>\n  );\n}\n\nTable.displayName = \"Table\";\n"],"names":["Cell","item","property","renders","render","jsx","Table","items","headers","selectedRows","setSelectedRows","useState","handleRowSelect","index","i","handleSelectAll","allIndices","_","jsxs","css","headerValue","rowIndex","classnames","cellIndex"],"mappings":"4FAQA,SAAAA,EAAA,CAAA,KAAAC,EAAA,SAAAC,EAAA,QAAAC,CAAA,EAAA,CACI,MAAAC,EAAAD,GAAA,YAAAA,EAAAD,GAEA,OAAAE,EAAYC,EAAAA,IAAA,KAAA,CAAA,SAAAD,EAAAH,CAAA,CAAA,CAAA,EAEZI,EAAAA,IAAA,KAAA,CAAA,SAAAJ,EAAAC,CAAA,CAAA,CAAA,CACJ,seCHO,SAAAI,EAAA,CAAA,MAAAC,EAAA,QAAAC,EAAA,QAAAL,CAAA,EAAA,CACL,KAAA,CAAAM,EAAAC,CAAA,EAAAC,EAAA,SAAA,CAAA,CAAA,EAEAC,EAAAC,GAAA,CACEJ,EAAA,SAAAI,CAAA,EACEH,EAAAD,EAAA,OAAAK,GAAAA,IAAAD,CAAA,CAAA,EAEAH,EAAA,CAAA,GAAAD,EAAAI,CAAA,CAAA,CACF,EAGFE,EAAA,IAAA,CACE,GAAAN,EAAA,SAAAF,EAAA,OACEG,EAAA,CAAA,CAAA,MAAkB,CAElB,MAAAM,EAAA,MAAA,KAAA,CAAA,OAAAT,EAAA,MAAA,EAAA,CAAAU,EAAA,IAAA,CAAA,EACAP,EAAAM,CAAA,CAA0B,CAC5B,EAGF,OAAAE,EAAAA,KAAA,QAAA,CAAA,UAAAC,EAAA,MAAA,SAAA,CAEId,EAAA,IAAA,QAAA,CAAA,SAAAa,EAAAA,KAAA,KAAA,CAAA,SAAA,CAEIb,MAAA,KAAA,CAAA,SAAAA,EAAA,IACE,QAAC,CAAA,KAAA,WACM,QAAAI,EAAA,SAAAF,EAAA,OACkC,SAAAQ,CAC7B,CAAA,EAAA,EAEd,OAAA,OAAAP,CAAA,EAAA,IAAA,CAAAY,EAAAP,IAAAR,EAAA,IAAA,KAAA,CAAA,SAAAe,CAAA,EAAAP,CAAA,CAAA,CAGC,CAAA,CAAA,CAAA,CAAA,EAELR,MAAA,QAAA,CAAA,SAAAE,EAAA,IAAA,CAAAN,EAAAoB,IAAAH,EAAAA,KAAA,KAAA,CAAA,UAAAI,EAAA,CAAA,CAAAH,EAAA,QAAA,EAAAV,EAAA,SAAAY,CAAA,EAAA,EAAA,SAAA,CAGIhB,MAAA,KAAA,CAAA,SAAAA,EAAA,IACE,QAAC,CAAA,KAAA,WACM,QAAAI,EAAA,SAAAY,CAAA,EACkC,SAAA,IAAAT,EAAAS,CAAA,EACC,cAAA,YAAAA,CAAA,EACP,CAAA,EAAA,EAErC,OAAA,KAAAb,CAAA,EAAA,IAAA,CAAAN,EAAAqB,IAAAlB,EAAAA,IAAAL,EAAA,CAAA,KAAAC,EAAA,SAAAC,EAAA,QAAAC,CAAA,EAAA,GAAAkB,CAAA,IAAAE,CAAA,EAAA,CAAA,CAGC,GAAAF,CAAA,CAAA,EAAA,CAEF,CAAA,CAAA,CAGT,CAEAf,EAAA,YAAA"}